Algoritmo: CargarProductos (Función)

Propósito: Crea y devuelve una matriz con datos de productos predefinidos.
Parámetro de entrada: Ninguno
Valor de retorno: Matriz de Texto con los datos de los productos

Declarar producto como una Matriz de Texto
Inicializar producto con 20 filas de datos (Código, Nombre, Precio, Existencias, IVA)
Retornar producto


Algoritmo: MostrarProducto (Función)

Propósito: Formatea los datos de un solo producto en una cadena de texto alineada.
Parámetro de entrada: vproducto (Arreglo de Texto)
Valor de retorno: Texto con el producto formateado

Para cada elemento en vproducto:
Llamar a RellenarEspacios para formatear el elemento a un tamaño fijo
Concatenar todos los elementos formateados en una sola cadena
Retornar la cadena final

Algoritmo: MostrarLista (Función)

Propósito: Genera una cadena de texto con una tabla formateada de todos los productos.
Parámetro de entrada: vproductos (Matriz de Texto)
Valor de retorno: Texto con la tabla de productos

Inicializar salida (Texto) como vacía
Construir titulo (Texto) para el encabezado de la tabla usando RellenarEspacios
Imprimir titulo en la consola
Imprimir línea separadora en la consola
Para cada fila en vproductos:
Llamar a MostrarProducto con la fila actual para obtener una cadena formateada
Añadir la cadena y un salto de línea a salida
Retornar salida

Algoritmo: ExisteProducto (Función)

Propósito: Busca un producto por su código y devuelve su posición (índice).
Parámetros de entrada: codigo (Texto), vproductos (Matriz de Texto)
Valor de retorno: Entero (la posición del producto o -1 si no se encuentra)

Inicializar enc (Entero) en -1
Inicializar pos (Entero) en 0
Para cada fila en vproductos:
Comparar el código en la fila con el codigo de entrada
Si son iguales:
Asignar pos a enc
Terminar bucle
Incrementar pos
Retornar enc

Algoritmo: ModificarProducto (Procedimiento)

Propósito: Permite al usuario modificar el precio de un producto existente.
Parámetro de entrada: vproductos (Matriz de Texto)
Valor de retorno: Ninguno

Mostrar lista: Llamar a MostrarLista con vproductos
Solicitar código: Llamar a Leer para obtener el codigo (Texto) del producto
Verificar código: Si codigo es válido (no nulo o vacío):
Buscar producto: Llamar a ExisteProducto para obtener la posicion (Entero)
Verificar existencia: Si posicion es mayor que -1:
Solicitar precio: Llamar a Leer para obtener el nuevo precio (Texto)
Verificar precio: Si precio es válido (no nulo o vacío):
Actualizar matriz: Asignar precio a vproductos en la posicion encontrada
Mostrar mensaje de éxito
Sino: Mostrar mensaje de error de precio
Sino: Mostrar mensaje de que el producto no existe
Sino: Mostrar mensaje de error de código

Algoritmo: MenuProductos (Procedimiento)

Propósito: Define y muestra el menú de opciones para la gestión de productos.
Parámetro de entrada: productos (Matriz de Texto)
Valor de retorno: Ninguno

Definir opciones: Crear datosmenuproductos (Arreglo de Texto)
Definir acciones: Crear acciones (Arreglo de Tareas)
La acción "Modificar" debe llamar a ModificarProducto con productos
La acción "Listado" debe llamar a MostrarLista con productos
Llamar a GestionarMenus con el título, opciones, acciones y salir en falso

Algoritmo: MenuPrincipal (Procedimiento)

Propósito: Muestra el menú principal y coordina la navegación a los submenús.
Parámetro de entrada: productos (Matriz de Texto)
Valor de retorno: Ninguno

Definir opciones: Crear datosmenuprincipal (Arreglo de Texto)
Definir acciones: Crear acciones (Arreglo de Tareas)
La acción "Productos" debe llamar a MenuProductos con productos
Las otras acciones deben llamar a sus respectivos menús
Llamar a GestionarMenus con el título, opciones, acciones y salir en falso

Algoritmo: main (Procedimiento)

Propósito: Inicia la aplicación.
Parámetro de entrada: Ninguno
Valor de retorno: Ninguno

Cargar datos: Llamar a CargarProductos y guardar el resultado en productos
Iniciar menú: Llamar a MenuPrincipal con productos
